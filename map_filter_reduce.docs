filter_map_reduce.txt

Reducer function understand concept
The reduce() method reduces an array of values down to just one value.
 To get the output value, it runs a reducer function on each element of the array.

Syntax
arr.reduce(callback[, initialValue])
The callback argument is a function that will be called once for every item in the array.
 This function takes four arguments, but often only the first two are used.

accumulator - the returned value of the previous iteration
currentValue - the current item in the array
index - the index of the current item
array - the original array on which reduce was called
The initialValue argument is optional. If provided, it will be used as the initial accumulator value in the first call to the callback function.

Filter function
The filter() method takes each element in an array and it applies a conditional statement against it.
 If this conditional returns true, the element gets pushed to the output array. If the condition returns false, the element does not get pushed to the output array.

Syntax
var new_array = arr.filter(function callback(element, index, array) {
    // Return true or false
}[, thisArg])

Spread operator

JavaScript ES6 (ECMAScript 6) introduced the spread operator. The syntax is three dots(...) followed by the array (or iterable*).
It expands the array into individual elements.
So, it can be used to expand the array in a places where zero or more elements are expected.
The spread operator allows you to spread out elements of an iterable object such as an array, map, or set.
https://www.javascripttutorial.net/es6/javascript-spread/

Map concept

The map() method is used for creating a new array from an existing one, applying a function to each one of the elements of the first array.
Syntax
var new_array = arr.map(function callback(element, index, array) {
    // Return value for new_array
}[, thisArg])

In the callback, only the array element is required. Usually some action is performed on the value and then a new value is returned.


//Performance of Map, Filter, and Reduce

//Object entries vs Object keys



//slice
